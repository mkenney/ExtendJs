{"name":"Extendjs","tagline":"Javascript functionality I think is missing and I'm tired of re-creating over and over.","body":"# [ExtendJs](https://github.com/mkenney/ExtendJs)\r\n\r\nJavascript functionality I think is missing and I'm tired of re-creating over and\r\nover.\r\n\r\nI'm totally polluting the prototypes of built in classes. I don't feel bad about\r\nit. Nothing in this library will interfere with other libraries or break `for .. in`\r\nloops or change any existing method behaviors or conflict with any future versions\r\nof javascript or anything else. If I miss something that does, let me know and\r\nI'll fix it immediately.\r\n\r\n## Table of contents\r\n\r\n- [Quick start](#quick-start)\r\n- [Bugs and feature requests](#bugs-and-feature-requests)\r\n- [Documentation](#documentation)\r\n- [Examples](#examples)\r\n- [Contributing](#contributing)\r\n- [Versioning](#versioning)\r\n- [Creator](#creator)\r\n- [Copyright and license](#copyright-and-license)\r\n\r\n## Quick start\r\n\r\n- Clone the repo: `git clone https://github.com/mkenney/ExtendJs.git`.\r\n\r\n### What's included\r\n\r\nWithin the repository you'll find the following directories and files, something\r\nlike this:\r\n\r\n```\r\nExtendJs/\r\n    ├── src/\r\n    │    └──js/\r\n    │        ├── Array.js\r\n    │        ├── Date.js\r\n    │        ├── Number.js\r\n    │        ├── Object.js\r\n    │        └── String.js\r\n    └── assets/\r\n         └──js/\r\n             ├── ExtendJs.js\r\n             ├── ExtendJs.map\r\n             └── ExtendJs.min.js\r\n```\r\n\r\nThe compiled file (`ExtendJs.js`) and [source map](https://developers.google.com/chrome-developer-tools/docs/css-preprocessors)\r\n(`ExtendJs.map`) are located in the assets/ directory and are available for use\r\nwith certain browsers' developer tools.\r\n\r\n## Bugs and feature requests\r\n\r\nIf you find a bug or have a feature request [please open a new issue](#contributing).\r\n\r\n\r\n## Documentation\r\n\r\nExtendJs both extends native Javascript objects like Array and Date, and creates\r\nnew global objects you can use however you like.  Here are the objects, properties\r\nand methods managed by this code.\r\n\r\nJavascript Native Objects\r\n```javascript\r\n/**\r\n * A read-only boolean flag has been added to all objects and variables noting\r\n * that ExtendJs is installed.  Always true if the library has been loaded.\r\n */\r\nObject.prototype.__ExtendJs__\r\n\r\n/**\r\n * A read-only text value has been added to all objects and variables describing\r\n * the object type because type checking in Javascript is so difficult:\r\n *\r\n *     var test = 1;\r\n *     test.__type__          === \"Number\"\r\n *     Number(1).__type__     === \"Number\"\r\n *     new Number(1).__type__ === \"Number\"\r\n *     Number.__type__        === \"Function\"\r\n *     NaN.__type__           === \"NaN\"\r\n */\r\nObject.prototype.__type__\r\n\r\n/**\r\n * Extend objects ala jQuery.extend() and return the resulting object\r\n */\r\nObject.extend( [deep], target, object1[, objectN])\r\n\r\n/**\r\n * Add the indexOf array method to IE 8 and 9\r\n */\r\nArray.prototype.indexOf()\r\n\r\n/**\r\n * Extend Date with a day of year method\r\n */\r\nDate.prototype.getDayOfYear()\r\n\r\n/**\r\n * Extend Date with a number of days in the current month method\r\n */\r\nDate.prototype.getDaysInMonth()\r\n\r\n/**\r\n * Extend Date with a week of year method\r\n */\r\nDate.prototype.getWeekOfYear()\r\n\r\n/**\r\n * Extend Date with an isDst (is daylight savings time) method\r\n */\r\nDate.prototype.isDst()\r\n\r\n/**\r\n * Extend Date with an isLeapYear method\r\n */\r\nDate.prototype.isLeapYear()\r\n\r\n/**\r\n * Extend date with a format method\r\n *\r\n * Accepts a PHP date() compatible date format string\r\n */\r\nDate.prototype.format(format_string)\r\n\r\n/**\r\n * Allow localization of date format strings\r\n */\r\nDate.prototype.localize(version, word, value)\r\n\r\n/**\r\n * Convert a signed or unsigned int to an IP address\r\n */\r\nNumber.prototype.toIp()\r\n\r\n/**\r\n * Simple PHP style number formatting\r\n */\r\nNumber.prototype.format(precision, decimal, separator)\r\n\r\n/**\r\n * The reverse of nl2br\r\n */\r\nString.prototype.br2nl()\r\n\r\n/**\r\n * Ala http://php.net/htmlspecialchars\r\n */\r\nString.prototype.htmlSpecialChars()\r\n\r\n/**\r\n * Left-trim whitespace\r\n */\r\nString.prototype.ltrim()\r\n\r\n/**\r\n * Ala http://php.net/nl2br\r\n */\r\nString.prototype.nl2br()\r\n\r\n/**\r\n * Escape a string for use in a regular expression\r\n */\r\nString.prototype.regexEscape()\r\n\r\n/**\r\n * Right-trim whitespace\r\n */\r\nString.prototype.rtrim()\r\n\r\n/**\r\n * Trim whitespace\r\n */\r\nString.prototype.trim()\r\n```\r\n\r\nGlobal IP class\r\n```javascript\r\n/**\r\n * Initialize this object\r\n */\r\nnew Ip(ipv4_string)\r\n\r\n/**\r\n * Convert an IP address to an unsigned int\r\n */\r\nIp.prototype.toLong()\r\n\r\n/**\r\n * Convert an IP address to a signed int\r\n */\r\nIp.prototype.toSignedLong()\r\n```\r\n\r\n## Examples\r\n\r\n### Object.\\__ExtendJs__\r\n\r\nAll data types are given an `__ExtendJs__` property with a value of `true` denoting\r\nthat ExtendJs is installed:\r\n\r\n```javascript\r\nconsole.log(false.__ExtendJs__);\r\n// true\r\n```\r\n\r\n### Object.\\__type__\r\n\r\n```javascript\r\nvar obj = {};\r\nconsole.log(obj.__type__);\r\n// \"Object\"\r\n\r\nvar obj = Object;\r\nconsole.log(obj.__type__);\r\n// \"Function\" - This is true of all functions\r\n\r\nvar obj = Object();\r\nconsole.log(obj.__type__);\r\n// \"Object\"\r\n\r\nvar obj = new Object();\r\nconsole.log(obj.__type__);\r\n// \"Object\"\r\n\r\n//----------------------------------------------------------------------------//\r\n\r\nvar obj = [];\r\nconsole.log(obj.__type__);\r\n// \"Array\" - This is correct for all Array instances\r\n\r\n//----------------------------------------------------------------------------//\r\n\r\nvar obj = 0;\r\nconsole.log(obj.__type__);\r\n// \"Number\" - This is correct for both primitive and Object instances\r\n\r\n//----------------------------------------------------------------------------//\r\n\r\nvar obj = true;\r\nconsole.log(obj.__type__);\r\n// \"Boolean\" - This is correct for both primitive and Object instances\r\n\r\n//----------------------------------------------------------------------------//\r\n\r\nvar obj = null;\r\nconsole.log(obj.__type__);\r\n// TypeError: Cannot read property '__type__' of null\r\n\r\n//----------------------------------------------------------------------------//\r\n\r\nvar obj = NaN;\r\nconsole.log(obj.__type__);\r\n// \"NaN\"\r\n\r\nvar obj = new Number('a');\r\nconsole.log(obj.__type__);\r\n// \"NaN\"\r\n\r\nvar obj = 2 / 'a';\r\nconsole.log(obj.__type__);\r\n// \"NaN\"\r\n```\r\n\r\n### Object.extend()\r\n\r\n```javascript\r\nvar object1 = {\r\n  apple: 0,\r\n  banana: { weight: 52, price: 100 },\r\n  cherry: 97\r\n};\r\nvar object2 = {\r\n  banana: { price: 200 },\r\n  durian: 100\r\n};\r\n\r\n// Merge object2 into object1\r\nObject.extend( object1, object2 );\r\n\r\nconsole.log(JSON.stringify( object1 ))\r\n\r\n// Output:\r\n// {\"apple\":0,\"banana\":{\"price\":200},\"cherry\":97,\"durian\":100}\r\n\r\n//----------------------------------------------------------------------------//\r\n\r\nvar object1 = {\r\n  apple: 0,\r\n  banana: { weight: 52, price: 100 },\r\n  cherry: 97\r\n};\r\nvar object2 = {\r\n  banana: { price: 200 },\r\n  durian: 100\r\n};\r\n\r\n// Merge object2 into object1, recursively\r\n$.extend( true, object1, object2 );\r\nconsole.log(JSON.stringify( object1 ))\r\n\r\n// Output:\r\n// {\"apple\":0,\"banana\":{\"price\":200},\"cherry\":97,\"durian\":100}\r\n\r\n//----------------------------------------------------------------------------//\r\n\r\n\r\nvar defaults = { validate: false, limit: 5, name: \"foo\" };\r\nvar options = { validate: true, name: \"bar\" };\r\n\r\n// Merge defaults and options, without modifying defaults\r\nvar settings = Object.extend( {}, defaults, options );\r\n\r\nconsole.log(JSON.stringify( defaults ))\r\nconsole.log(JSON.stringify( options ))\r\nconsole.log(JSON.stringify( settings ))\r\n\r\n// Output:\r\n// {\"validate\":false,\"limit\":5,\"name\":\"foo\"}\r\n// {\"validate\":true,\"name\":\"bar\"}\r\n// {\"validate\":true,\"limit\":5,\"name\":\"bar\"}\r\n```\r\n\r\n### Number.format()\r\n\r\n```javascript\r\nvar num = 22 / 7 * 10000;\r\n\r\nconsole.log(num.format());\r\n// \"31,428\"\r\n\r\nconsole.log(num.format(3));\r\n// \"31,428.571\"\r\n\r\nconsole.log(num.format(3, '+'));\r\n// \"31,428+571\"\r\n\r\nconsole.log(num.format(3, '+', '#'));\r\n// \"31#428+571\"\r\n```\r\n\r\n### Date\r\n\r\n```javascript\r\nvar date = new Date('2016-02-29 15:45:30');\r\n\r\n//----------------------------------------------------------------------------//\r\n\r\nconsole.log(date);\r\n// \"Thu Jan 01 2015 15:45:30 GMT-0700 (MST)\"\r\n\r\nconsole.log(date.format('l M d, Y g:ia'));\r\n// \"Monday Jan 01, 2015 3:45pm\"\r\n\r\ndate.localize('full', 'Monday', 'Lunes')\r\nconsole.log(date.format('l M d, Y g:ia'));\r\n// \"Lunes Feb 29, 2016 3:45pm\"\r\n\r\n//----------------------------------------------------------------------------//\r\n\r\nconsole.log(date.getDayOfYear());\r\n// 60\r\n\r\nconsole.log(date.getDaysInMonth());\r\n// 29\r\n\r\nconsole.log(date.getWeekOfYear());\r\n// 9\r\n\r\nconsole.log(date.isDst());\r\n// false\r\n\r\nconsole.log(date.isLeapYear());\r\n// true\r\n```\r\n\r\n### Ip\r\n\r\n```javascript\r\nvar ip = new Ip('200.200.200.200');\r\n\r\nconsole.log(ip.toLong());\r\n// 3368601800\r\n\r\nconsole.log(ip.toSignedLong());\r\n// -926365496\r\n```\r\n\r\n## Contributing\r\n\r\n### Using the issue tracker\r\n\r\nThe [issue tracker](https://github.com/mkenney/ExtendJs/issues) is the preferred\r\nchannel for bug reports, features requests and submitting pull requests, but\r\nplease respect the following restrictions:\r\n\r\n* Please **do not** use the issue tracker for personal support requests.\r\n\r\n* Please **do not** derail or troll issues. Keep the discussion on topic and\r\n  respect the opinions of others.\r\n\r\n#### Bug reports\r\n\r\nA bug is a _demonstrable problem_ that is caused by the code in the repository.\r\nGood bug reports are extremely helpful!\r\n\r\nGuidelines for bug reports:\r\n\r\n0. **Validate and lint your code** &mdash; [lint your JS code](http://jshint.com/)\r\n   to ensure your problem isn't caused by an error in your own code.\r\n\r\n1. **[Use the GitHub issue search](https://github.com/mkenney/ExtendJs/issues)** &mdash; check if the issue has already been\r\n   reported.\r\n\r\n2. **Check if the issue has been fixed** &mdash; try to reproduce it using the\r\n   latest `master` branch in the repository\r\n\r\n3. **Isolate the problem** &mdash; ideally create a [reduced test\r\n   case](http://css-tricks.com/6263-reduced-test-cases/) and a [live example](http://jsfiddle.net/).\r\n\r\n\r\nExample:\r\n\r\n> Short and descriptive example bug report title\r\n>\r\n> A summary of the issue and the browser/OS environment in which it occurs. If\r\n> suitable, include the steps required to reproduce the bug.\r\n>\r\n> 1. This is the first step\r\n> 2. This is the second step\r\n> 3. Further steps, etc.\r\n>\r\n> `<url>` - a link to the reduced test case or live example\r\n>\r\n> Any other information you want to share that is relevant to the issue being\r\n> reported. This might include the lines of code that you have identified as\r\n> causing the bug, and potential solutions (and your opinions on their\r\n> merits).\r\n\r\n## Versioning\r\n\r\nFor transparency and in striving to maintain backward compatibility, ExtendJs is\r\nmaintained under [the Semantic Versioning guidelines](http://semver.org/).  I'll\r\nadhere to those rules whenever possible.\r\n\r\n## Creator\r\n\r\n**Michael Kenney**\r\n\r\n- <https://github.com/mkenney>\r\n- <https://www.linkedin.com/in/michaelkenney>\r\n\r\n\r\n## Copyright and license\r\n\r\nCode and documentation copyright 2014-2015 Michael Kenney. Released under\r\n[the MIT license](https://github.com/mkenney/ExtendJs/blob/master/LICENSE).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}